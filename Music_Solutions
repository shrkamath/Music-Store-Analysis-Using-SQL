SELECT * FROM EMPLOYEE
/*SQL PROJECT- MUSIC STORE DATA ANALYSIS 
Question Set 1 - Easy 
1.	Who is the senior most employee based on job title? 
*/
SELECT first_name,last_name,title 
FROM employee
ORDER BY LEVELS DESC
LIMIT 1;
/*2.	Which countries have the most Invoices? */
SELECT billing_country, COUNT(invoice_date) AS no_of_invoice
FROM invoice
GROUP BY billing_country
ORDER BY COUNT(invoice_date) DESC
LIMIT 1;
--OR
SELECT COUNT(*) AS c, billing_country 
FROM invoice
GROUP BY billing_country
ORDER BY c DESC

/*3.What are top 3 values of total invoice? */
SELECT total
FROM invoice
ORDER BY total DESC
LIMIT 3;
/*4.	Which city has the best customers? We would like to throw a promotional Music Festival in the city we 
made the most money. Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals */
SELECT * FROM invoice

SELECT billing_city,SUM(total)
FROM invoice
GROUP BY billing_city
ORDER BY SUM(total) DESC
LIMIT 1;

/*5.Who is the best customer? The customer who has spent the most money will be declared the best customer.
Write a query that returns the person who has spent the most money */
SELECT C.customer_id,first_name,last_name, SUM(total) AS Total_spent
FROM customer AS C
INNER JOIN invoice AS I
ON C.customer_id = I.customer_id
GROUP BY C.customer_id
ORDER BY Total_spent DESC
LIMIT 1;

/*Question Set 2 – Moderate 
1.Write query to return the email, first name, last name, & Genre of all Rock Music listeners.
Return your list ordered alphabetically by email starting with A */
SELECT * FROM customer
--first we will  e needing customer,
SELECT DISTINCT first_name,last_name,email
FROM customer AS C 
INNER JOIN invoice AS I
ON C.customer_id = I.customer_id
INNER JOIN invoice_line AS IL 
ON I.invoice_id = IL.invoice_id
WHERE track_id IN(
				SELECT track_id FROM track AS T
				INNER JOIN genre AS G
				ON T.genre_id=G.genre_id
				WHERE G.name ='Rock')
ORDER BY email;

/*2.Let's invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands */
SELECT artist.artist_id,artist.name,COUNT(artist.artist_id) AS number_of_songs
FROM track
JOIN album ON track.album_id = album.album_id
JOIN artist ON artist.artist_id = album.artist_id
JOIN genre ON track.genre_id = genre.genre_id
WHERE genre.name = 'Rock'
GROUP BY artist.artist_id
ORDER BY number_of_songs DESC
LIMIT 10;

/*3.Return all the track names that have a song length longer than the average song length.
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first */
SELECT name,milliseconds
FROM track
WHERE milliseconds > (SELECT AVG(milliseconds) AS AVG_length
FROM track)
ORDER BY milliseconds DESC;

/*Question Set 3 – Advance 
1.	Find how much amount spent by each customer on artists? 
Write a query to return customer name, artist name and total spent */
--DIDNT UNDERSTAND--

/*2.We want to find out the most popular music Genre for each country. 
We determine the most popular genre as the genre with the highest amount of purchases. Write a query that 
returns each country along with the top Genre. For countries where the maximum number of 
purchases is shared return all Genres */
SELECT * FROM invoice_line

WITH CTE AS (
	SELECT customer.country,genre.name,COUNT(invoice_line.quantity) AS purchases,
	ROW_NUMBER() OVER (PARTITION BY customer.country ORDER BY COUNT(invoice_line.quantity) DESC ) AS Row_No
	FROM invoice_line 
	JOIN invoice ON invoice_line.invoice_id = invoice.invoice_id
	JOIN customer ON customer.customer_id = invoice.customer_id
	JOIN track ON track.track_id = invoice_line.track_id
	JOIN genre ON genre.genre_id = track.genre_id
	GROUP BY 1,2
	ORDER BY customer.country ASC,purchases DESC
	)
SELECT * FROM CTE
WHERE Row_no = 1;

/*3.	Write a query that determines the customer that has spent the most on music for each country.
Write a query that returns the country along with the top customer and how much they spent. 
For countries where the top amount spent is shared, provide all customers who spent this amount */
WITH CTE AS(
	SELECT first_name,last_name,billing_country,SUM(total) AS total_spent,
	ROW_NUMBER() OVER (PARTITION BY billing_country ORDER BY SUM(total) DESC) AS row_no
	FROM customer AS C
	JOIN invoice ON C.customer_id = invoice.customer_id
	GROUP BY 1,2,3
	ORDER BY billing_country,total_spent DESC
	)
SELECT * FROM CTE 
WHERE row_no = 1;





